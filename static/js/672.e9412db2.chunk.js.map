{"version":3,"file":"static/js/672.e9412db2.chunk.js","mappings":"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","sources":["app/view/index.tsx","app/model/main.controller.tsx","app/model/index.ts","app/configs/manifest.config.ts","app/configs/index.ts","app/bootstrap.app.tsx","shared/devTools.ts","shared/runtime.ts","shared/storage.ts","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/jsx-runtime.js"],"sourcesContent":["const View = () => {\n  return (\n    <iframe\n      src=\"https://app.sypool.io/\"\n      title=\"Sypool: Synthetic Asset Pools Management\"\n      style={{\n        height: 'calc(100vh - 64px)',\n        marginLeft: -12,\n        marginRight: -12,\n        marginTop: -24,\n        marginBottom: -12,\n        border: 'none',\n        width: '100vw',\n      }}\n    />\n  )\n}\n\nexport default View\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type State = {\n  counter: number\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'main'\nconst initialState: State = {\n  counter: 0,\n}\n\n/**\n * Actions\n */\n\nexport const increaseCounter = createAsyncThunk<State, void, { state: any }>(\n  `${NAME}/increaseCounter`,\n  async (_, { getState }) => {\n    const {\n      main: { counter },\n    } = getState()\n    return { counter: counter + 1 }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      increaseCounter.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport main from 'app/model/main.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    main,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env } from 'shared/runtime'\nimport manifest from './manifest.config'\n\nconst configs = {\n  manifest: manifest[env],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { Provider } from 'react-redux'\nimport { UIProvider } from '@senhub/providers'\n\nimport View from 'app/view'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <Provider store={model}>\n        <View />\n      </Provider>\n    </UIProvider>\n  )\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    val instanceof Buffer\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { Connection } from '@solana/web3.js'\nimport storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n\n/**\n * RPC Node\n */\nconst CLUSTERS: Record<Net, string[]> = {\n  devnet: [\n    'https://api.devnet.solana.com',\n    'https://psytrbhymqlkfrhudd.dev.genesysgo.net:8899/',\n  ],\n  testnet: ['https://api.testnet.solana.com'],\n  mainnet: [\n    'https://ssc-dao.genesysgo.net/',\n    'https://solana-api.projectserum.com',\n    'https://solitary-autumn-water.solana-mainnet.quiknode.pro/dcbac9d444818a20ac583541dec35b44c6840888/',\n  ],\n}\nconst getRPC = () => {\n  const rpcs = CLUSTERS[net]\n  const rpc = rpcs[Math.floor(Math.random() * rpcs.length)]\n  console.log('Debug OS RPC:', rpc)\n  return rpc\n}\nexport const rpc: string = getRPC()\n\n/**\n * Ping Solana cluster\n * @param nodeRpc - Solana's RPC cluster\n * @returns ping time\n */\nexport const pingCluster = async (nodeRpc: string): Promise<number> => {\n  const connection = new Connection(nodeRpc)\n  const start = Date.now()\n  await connection.getVersion()\n  const end = Date.now()\n  return end - start\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","/** @license React v17.0.2\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';require(\"object-assign\");var f=require(\"react\"),g=60103;exports.Fragment=60107;if(\"function\"===typeof Symbol&&Symbol.for){var h=Symbol.for;g=h(\"react.element\");exports.Fragment=h(\"react.fragment\")}var m=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,n=Object.prototype.hasOwnProperty,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,k){var b,d={},e=null,l=null;void 0!==k&&(e=\"\"+k);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(l=a.ref);for(b in a)n.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:g,type:c,key:e,ref:l,props:d,_owner:m.current}}exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n"],"names":["src","title","style","height","marginLeft","marginRight","marginTop","marginBottom","border","width","NAME","increaseCounter","createAsyncThunk","async","_","getState","main","counter","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","process","reducer","shared","appId","url","manifest","development","staging","production","env","configs","Page","UIProvider","antd","Provider","store","model","appName","BigInt","prototype","toJSON","this","toString","serializableCheck","isSerializable","val","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","PublicKey","BN","Buffer","net","storage","getNetwork","chainId","getChainId","CLUSTERS","devnet","testnet","mainnet","rpc","rpcs","Math","floor","random","length","console","log","getRPC","KEY","driver","window","localStorage","convert","value","JSON","parse","e","set","key","data","getItem","setItem","stringify","get","clear","require","f","g","Symbol","for","h","m","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","n","hasOwnProperty","p","ref","__self","__source","q","c","a","k","b","d","l","call","defaultProps","$$typeof","type","props","_owner","current","exports","jsx","module"],"sourceRoot":""}