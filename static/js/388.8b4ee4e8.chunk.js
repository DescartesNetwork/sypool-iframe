(globalThis.webpackChunksypool=globalThis.webpackChunksypool||[]).push([[388],{55852:(e,t,s)=>{"use strict";s.d(t,{Z:()=>d});var r=s(63805);const n={spltAddress:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",splataAddress:"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},i={devnet:{...n,node:r.f4,swapAddress:"4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF",taxmanAddress:"8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9"},testnet:{...n,node:r.f4,swapAddress:"4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF",taxmanAddress:"8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9"},mainnet:{...n,node:r.f4,swapAddress:"SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV",taxmanAddress:"9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e"}};const a="sypool",o={[a]:{url:"https://descartesnetwork.github.io/sypool-iframe/index.js",appId:a,name:"Sypool",author:{name:"Sypool",email:"team@sypool.io"},tags:"solana,liquidity".split(",").map((e=>e.trim())),description:"Synthetic Asset Pools Management",verified:!1}},c={development:{devAppId:a,extra:o,senreg:"https://descartesnetwork.github.io/senreg/register.json"},staging:{devAppId:a,extra:o,senreg:"https://descartesnetwork.github.io/senreg/register.json"},production:{devAppId:a,extra:{},senreg:"https://descartesnetwork.github.io/senreg/register.json"}},d={sol:i[r.ef],register:c[r.OB]}},33015:(e,t,s)=>{"use strict";s.d(t,{ZP:()=>d,ih:()=>a});var r=s(19289),n=s(95418);const i="mints",a=(0,r.createAsyncThunk)("mints/getMint",(async(e,t)=>{let{address:s,force:r=!1}=e,{getState:i}=t;if(!n.account.isAddress(s))throw new Error("Invalid mint address");if(!r){const{accounts:{[s]:e}}=i();if(e)return{[s]:e}}const{splt:a}=window.sentre;return{[s]:await a.getMintData(s)}})),o=(0,r.createAsyncThunk)("mints/upsetMint",(async e=>{let{address:t,data:s}=e;if(!n.account.isAddress(t))throw new Error("Invalid address");if(!s)throw new Error("Data is empty");return{[t]:s}})),c=(0,r.createAsyncThunk)("mints/deleteMint",(async e=>{let{address:t}=e;if(!n.account.isAddress(t))throw new Error("Invalid address");return{address:t}})),d=(0,r.createSlice)({name:i,initialState:{},reducers:{},extraReducers:e=>{e.addCase(a.fulfilled,((e,t)=>{let{payload:s}=t;Object.assign(e,s)})).addCase(o.fulfilled,((e,t)=>{let{payload:s}=t;Object.assign(e,s)})).addCase(c.fulfilled,((e,t)=>{let{payload:s}=t;delete e[s.address]}))}}).reducer},55721:(e,t,s)=>{"use strict";s.d(t,{Z:()=>n});var r=s(53933);const n=class{constructor(e){this.walletType=void 0,this.getProvider=async()=>{throw new Error("Wallet is not connected")},this.getAddress=async()=>{throw new Error("Wallet is not connected")},this.signTransaction=async e=>{const{signature:t,publicKey:s}=await this.rawSignTransaction(e);return e.addSignature(s,t),e},this.rawSignTransaction=async e=>{throw new Error("Wallet is not connected")},this.signMessage=async e=>{throw new Error("Wallet is not connected")},this.verifySignature=async(e,t,s)=>{throw new Error("Wallet is not connected")},this.disconnect=async()=>{r.Z.clear("WalletType");(await this.getProvider()).disconnect()},this.walletType=e,r.Z.set("WalletType",this.walletType)}}},80781:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(44967),n=s(95418),i=s(55721),a=s(97429).Buffer;class o extends i.Z{constructor(){super("Clover"),this.getProvider=async()=>{const{clover_solana:e}=window;if(null===e||void 0===e||!e.isCloverWallet)throw new Error("Wallet is not connected");return e},this.getAddress=async()=>{const e=await this.getProvider(),t=await e.getAccount();if(!n.account.isAddress(t))throw new Error("There is no Solana account");return t},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:i}=await t.signTransaction(e);return{publicKey:r,signature:i}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.signMessage(r,"utf8");return{address:s,signature:a.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const i=n.account.fromAddress(s),o=a.from(e,"hex"),c=(new TextEncoder).encode(t);return r.sign.detached.verify(c,o,i.toBuffer())}}}const c=o},6051:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var r=s(95418),n=s(68532),i=s(55721);class a extends i.Z{constructor(){super("Coin98"),this.getProvider=async()=>{var e;const{sol:t}=(null===(e=window)||void 0===e?void 0:e.coin98)||{};if(!t)throw new Error("Wallet is not connected");return t},this.getAddress=async()=>{const e=await this.getProvider(),[t]=await e.request({method:"sol_accounts"})||[];if(!r.account.isAddress(t))throw new Error("There is no Solana account");return t},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),i=r.account.fromAddress(s);e.feePayer=i;const{signature:a}=await t.request({method:"sol_sign",params:[e]});return{publicKey:i,signature:(0,n.decode)(a)}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider();return await t.request({method:"sol_sign",params:[e]})},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();return await r.account.verifySignature(s,e,t)}}}const o=a},58181:(e,t,s)=>{"use strict";s.d(t,{Z:()=>i});var r=s(55721);class n extends r.Z{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:()=>{};super("Guest"),this._callback=()=>{},this._error=()=>{throw new Error("You are in the Guest Mode. Please connect your personal wallet to proceed the action.")},this.getProvider=async()=>({address:"GuestAccount11111111111111111111111111111111",disconnect:()=>{}}),this.getAddress=async()=>{const{address:e}=await this.getProvider();return e},this.rawSignTransaction=async e=>(await this._callback(),this._error()),this.signMessage=async e=>(await this._callback(),this._error()),this.verifySignature=async(e,t,s)=>(await this._callback(),this._error()),this._callback=e}}const i=n},37344:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(44967),n=s(95418),i=s(55721),a=s(97429).Buffer;class o extends i.Z{constructor(){super("Phantom"),this.getProvider=async()=>{const{solana:e}=window;if(null===e||void 0===e||!e.isPhantom)throw new Error("Wallet is not connected");return e.isConnected?e:(e.connect(),await new Promise((t=>e.on("connect",(()=>t(e))))))},this.getAddress=async()=>{const e=(await this.getProvider()).publicKey.toString();if(!n.account.isAddress(e))throw new Error("There is no Solana account");return e},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:i}=await t.signTransaction(e);return{publicKey:r,signature:i}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.signMessage(r,"utf8");return{address:s,signature:a.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const i=n.account.fromAddress(s),o=a.from(e,"hex"),c=(new TextEncoder).encode(t);return r.sign.detached.verify(c,o,i.toBuffer())}}}const c=o},99715:(e,t,s)=>{"use strict";s.d(t,{Z:()=>l});var r=s(44967),n=s(95418),i=s(55721);const a="sentre",o=window.sessionStorage,c=e=>{try{return e?JSON.parse(e):null}catch(t){return!1}},d={set:(e,t)=>{let s=c(o.getItem(a));s&&"object"===typeof s||(s={}),s[e]=t,o.setItem(a,JSON.stringify(s))},get:e=>{let t=c(o.getItem(a));return t&&"object"===typeof t?t[e]:null},clear:e=>{d.set(e,null)}},h=d;var u=s(53933),g=s(97429).Buffer;class w extends i.Z{constructor(e,t){super("SecretKey"),this.getProvider=async()=>{const e=w.getSecretKey(),t=n.account.fromSecretKey(e);if(!t)throw new Error("Cannot get the keystore-based provider");return{keypair:t,disconnect:()=>h.clear("SecretKey")}},this.getAddress=async()=>{const{keypair:e}=await this.getProvider();return e.publicKey.toBase58()},this.rawSignTransaction=async e=>{if(!window.confirm("Please confirm to sign the transaction!"))throw new Error("User rejects to sign the transaction");const{keypair:t}=await this.getProvider(),s=e.serializeMessage();return{publicKey:t.publicKey,signature:r.sign.detached(s,t.secretKey)}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");if(!window.confirm(`Please confirm to sign the message! Message: ${e}`))throw new Error("User rejects to sign the message");const{keypair:t}=await this.getProvider(),s=g.from(t.secretKey).toString("hex");return{...n.account.signMessage(e,s)}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();return n.account.verifySignature(s,e,t)},w.setSecretKey(e,t)}}w.xor=(e,t)=>{if(e.length!==t.length)throw new Error("Cannot XOR two different-length buffers");const s=g.alloc(e.length);for(let r=0;r<s.length;r++)s[r]=e[r]^t[r];return s},w.getPassword=()=>{let e=h.get("Password");if(e||(e=window.prompt("Input the password:")),!e)throw new Error("User rejects to sign the transaction");return h.set("Password",e),e},w.setSecretKey=(e,t)=>{const{secretKey:s}=n.account.fromSecretKey(e)||{};if(!s)throw new Error("Invalid secret key");t=t||w.getPassword();const i=(0,r.hash)(g.from(t)),a=w.xor(i,s);u.Z.set("SecretKey",a.toString("hex"))},w.getSecretKey=e=>{e=e||w.getPassword();const t=(0,r.hash)(g.from(e)),s=u.Z.get("SecretKey");if(!s)throw new Error("Invalid secret key");return w.xor(t,g.from(s,"hex")).toString("hex")};const l=w},13974:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(42224),n=s(44967),i=s(95418),a=s(68532),o=s(55721),c=s(97429).Buffer;class d extends o.Z{constructor(){super("Slope"),this.provider=void 0,this.getProvider=async()=>{const{Slope:e}=window||{};if(!e)throw new Error("Cannot connect to Slope");return this.provider||(this.provider=new e,await this.provider.connect()),this.provider},this.getAddress=async()=>{const e=await this.getProvider(),{data:t}=await e.connect();if(!t.publicKey)throw new Error("Wallet is not connected");return t.publicKey},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=(0,a.encode)(e.serializeMessage()),{msg:n,data:i}=await t.signTransaction(s);if(!i.publicKey)throw new Error(n);return{publicKey:new r.PublicKey(i.publicKey),signature:(0,a.decode)(i.signature)}},this.verifySignature=async(e,t,s)=>{const r=s||await this.getAddress(),a=i.account.fromAddress(r),o=c.from(e,"hex"),d=(new TextEncoder).encode(t);return n.sign.detached.verify(d,o,a.toBuffer())},this.provider=null}}const h=d},60766:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(44967),n=s(95418),i=s(55721),a=s(97429).Buffer;class o extends i.Z{constructor(){super("SolflareExtension"),this.getProvider=async()=>{const{solflare:e}=window;if(!e.isSolflare)throw new Error("Wallet is not connected");return e.isConnected?e:(e.connect(),await new Promise((t=>e.on("connect",(()=>t(e))))))},this.getAddress=async()=>{const e=(await this.getProvider()).publicKey.toString();if(!n.account.isAddress(e))throw new Error("There is no Solana account");return e},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:i}=await t.signTransaction(e);return{publicKey:r,signature:i}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.signMessage(r,"utf8");return{address:s,signature:a.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const i=n.account.fromAddress(s),o=a.from(e,"hex"),c=(new TextEncoder).encode(t);return r.sign.detached.verify(c,o,i.toBuffer())}}}const c=o},31669:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(44967),n=s(95418),i=s(12053),a=s(55721),o=s(55852),c=s(97429).Buffer;class d extends a.Z{constructor(){super("SolflareWeb"),this.provider=void 0,this.getProvider=async()=>(this.provider.connected||await this.provider.connect(),this.provider),this.getAddress=async()=>{const e=await this.getProvider();if(!e.publicKey)throw new Error("Cannot connect to Solflare");return e.publicKey.toBase58()},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:i}=await t.signTransaction(e);return{publicKey:r,signature:i}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.sign(r,"utf8");return{address:s,signature:c.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const i=n.account.fromAddress(s),a=c.from(e,"hex"),o=(new TextEncoder).encode(t);return r.sign.detached.verify(o,a,i.toBuffer())};const{sol:{node:e}}=o.Z;this.provider=new i.Z("https://solflare.com/provider",e)}}const h=d},2491:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(44967),n=s(95418),i=s(12053),a=s(55721),o=s(55852),c=s(97429).Buffer;class d extends a.Z{constructor(){super("SolletWeb"),this.provider=void 0,this.getProvider=async()=>(this.provider.connected||await this.provider.connect(),this.provider),this.getAddress=async()=>{const e=await this.getProvider();if(!e.publicKey)throw new Error("Cannot connect to Sollet Web");return e.publicKey.toBase58()},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:i}=await t.signTransaction(e);return{publicKey:r,signature:i}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.sign(r,"utf8");return{address:s,signature:c.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const i=n.account.fromAddress(s),a=c.from(e,"hex"),o=(new TextEncoder).encode(t);return r.sign.detached.verify(o,a,i.toBuffer())};const{sol:{node:e}}=o.Z;this.provider=new i.Z("https://www.sollet.io",e)}}const h=d},67751:(e,t,s)=>{"use strict";s.d(t,{U:()=>n});var r=s(15822);class n{static set(e,t){let s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r.qf;this.mapCache.set(e,t),setTimeout((()=>{this.mapCache.delete(e)}),s.ttl)}static get(e){return this.mapCache.get(e)}}n.mapCache=new Map},15822:(e,t,s)=>{"use strict";s.d(t,{Dt:()=>n,qf:()=>r});const r={ttl:3e4},n={limit:{calls:10,time:1e3},cache:r}},85964:(e,t,s)=>{"use strict";s.d(t,{g:()=>r});class r{constructor(e){this.key="",this.resolveQueue=[],this.rejectQueue=[],this.key=e}add(e,t){this.resolveQueue.push(e),this.rejectQueue.push(t)}resolves(e){for(;this.resolveQueue.length>0;){this.resolveQueue.shift()(e)}}rejects(e){for(;this.rejectQueue.length>0;){this.rejectQueue.shift()(e)}}}},3007:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(15454),n=s.n(r),i=s(95418),a=s(83868);class o{constructor(e){if(this.dbName=void 0,this.driver=void 0,this.ipfs=void 0,this.createInstance=e=>n().createInstance({driver:this.driver,name:this.dbName,storeName:e}),this.dropInstance=async e=>{const t=this.createInstance(e);return await t.clear(),await n().dropInstance({name:this.dbName,storeName:e})},this.all=async()=>{let e={};const t=(await this.createInstance("sentre").getItem("appIds")||[]).flat().concat(["sentre"]);for(const s of t){e[s]={};const t=this.createInstance(s);await t.iterate(((t,r)=>{e[s][r]=t}))}return e},this.fetch=async e=>await this.ipfs.get(e),this.backup=async()=>{const e=await this.all();return await this.ipfs.set(e)},this.restore=async e=>{const t=await this.fetch(e);for(const s in t){const e=await this.createInstance(s);for(const r in t[s]){const n=t[s][r];await e.setItem(r,n)}}return t},!i.account.isAddress(e))throw new Error("Invalid address");this.dbName=e,this.driver=[n().WEBSQL,n().LOCALSTORAGE],this.ipfs=new a.Z}}const c=o},83868:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var r=s(10685),n=s(12677),i=s(97429).Buffer;class a{constructor(){this._ipfs=async()=>{try{return window.ipfs||(window.ipfs=await(0,r.Ue)()),window.ipfs}catch(e){return await(0,n.sA)(500),await this._ipfs()}},this.get=async e=>{if(!a.isCID(e))throw new Error("Invalid CID");const t=await this._ipfs(),s=await t.cat(e);let r="";for await(const n of s)r+=i.from(n).toString();return JSON.parse(r)},this.set=async e=>{if(!e)throw new Error("Empty data");const t=JSON.stringify(e),s=await this._ipfs(),{cid:r}=await s.add(t);return r.toString()}}}a.isCID=e=>{try{return!!e&&r.bf.multihash(e)}catch(t){return!1}};const o=a},43094:()=>{},69159:()=>{},35883:()=>{},5696:()=>{},64009:()=>{},42611:()=>{},88795:()=>{},89408:()=>{},47956:()=>{},21724:()=>{},62678:()=>{},25819:()=>{},52361:()=>{},94616:()=>{}}]);
//# sourceMappingURL=388.8b4ee4e8.chunk.js.map